buildscript {
    ext {
        springBootVersion = '2.1.1.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:2.1.1.RELEASE')
        classpath('org.glassfish.jaxb:jaxb-runtime:2.3.1')
    }
}

plugins {
    id 'nu.studer.jooq' version '3.0.2'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.aytdm'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 9
targetCompatibility = 9

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-jooq')
    implementation('org.springframework.boot:spring-boot-starter-webflux')
    runtimeOnly('org.springframework.boot:spring-boot-devtools')
    runtimeOnly('mysql:mysql-connector-java')
    compileOnly('org.projectlombok:lombok')
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation('io.projectreactor:reactor-test')
    jooqRuntime('org.glassfish.jaxb:jaxb-runtime:2.3.1')
    jooqRuntime('com.sun.activation:javax.activation:1.2.0')
    jooqRuntime('mysql:mysql-connector-java')
}

jooq {
    Sample(sourceSets.main) {
        jdbc {
            driver = "com.mysql.jdbc.Driver"
            url = 'jdbc:mysql://localhost:3306/world?characterEncoding=UTF-8&useSSL=false'
            user = 'root'
            password = 'password'
        }
        generator {
            name = 'org.jooq.codegen.DefaultGenerator'
            database {
                name = 'org.jooq.meta.mysql.MySQLDatabase'
                inputSchema = 'world'
                includes = '.*'
                excludes = ''
            }
            target {
                packageName = 'com.aytdm.springbootjooq.domain.db.world'
                directory = 'src/main/java'
            }
        }
    }
}
