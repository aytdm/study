/*
 * This file is generated by jOOQ.
 */
package com.aytdm.springbootjooq.domain.db.world;


import com.aytdm.springbootjooq.domain.db.world.tables.City;
import com.aytdm.springbootjooq.domain.db.world.tables.Country;
import com.aytdm.springbootjooq.domain.db.world.tables.Countrylanguage;

import javax.annotation.Generated;

import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.Internal;


/**
 * A class modelling indexes of tables of the <code>world</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index CITY_COUNTRYCODE = Indexes0.CITY_COUNTRYCODE;
    public static final Index CITY_PRIMARY = Indexes0.CITY_PRIMARY;
    public static final Index COUNTRY_PRIMARY = Indexes0.COUNTRY_PRIMARY;
    public static final Index COUNTRYLANGUAGE_COUNTRYCODE = Indexes0.COUNTRYLANGUAGE_COUNTRYCODE;
    public static final Index COUNTRYLANGUAGE_PRIMARY = Indexes0.COUNTRYLANGUAGE_PRIMARY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Indexes0 {
        public static Index CITY_COUNTRYCODE = Internal.createIndex("CountryCode", City.CITY, new OrderField[] { City.CITY.COUNTRYCODE }, false);
        public static Index CITY_PRIMARY = Internal.createIndex("PRIMARY", City.CITY, new OrderField[] { City.CITY.ID }, true);
        public static Index COUNTRY_PRIMARY = Internal.createIndex("PRIMARY", Country.COUNTRY, new OrderField[] { Country.COUNTRY.CODE }, true);
        public static Index COUNTRYLANGUAGE_COUNTRYCODE = Internal.createIndex("CountryCode", Countrylanguage.COUNTRYLANGUAGE, new OrderField[] { Countrylanguage.COUNTRYLANGUAGE.COUNTRYCODE }, false);
        public static Index COUNTRYLANGUAGE_PRIMARY = Internal.createIndex("PRIMARY", Countrylanguage.COUNTRYLANGUAGE, new OrderField[] { Countrylanguage.COUNTRYLANGUAGE.COUNTRYCODE, Countrylanguage.COUNTRYLANGUAGE.LANGUAGE }, true);
    }
}
