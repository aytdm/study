/*
 * This file is generated by jOOQ.
 */
package com.aytdm.springbootjooq.domain.db.world;


import com.aytdm.springbootjooq.domain.db.world.tables.City;
import com.aytdm.springbootjooq.domain.db.world.tables.Country;
import com.aytdm.springbootjooq.domain.db.world.tables.Countrylanguage;
import com.aytdm.springbootjooq.domain.db.world.tables.records.CityRecord;
import com.aytdm.springbootjooq.domain.db.world.tables.records.CountryRecord;
import com.aytdm.springbootjooq.domain.db.world.tables.records.CountrylanguageRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>world</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<CityRecord, Integer> IDENTITY_CITY = Identities0.IDENTITY_CITY;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CityRecord> KEY_CITY_PRIMARY = UniqueKeys0.KEY_CITY_PRIMARY;
    public static final UniqueKey<CountryRecord> KEY_COUNTRY_PRIMARY = UniqueKeys0.KEY_COUNTRY_PRIMARY;
    public static final UniqueKey<CountrylanguageRecord> KEY_COUNTRYLANGUAGE_PRIMARY = UniqueKeys0.KEY_COUNTRYLANGUAGE_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CityRecord, CountryRecord> CITY_IBFK_1 = ForeignKeys0.CITY_IBFK_1;
    public static final ForeignKey<CountrylanguageRecord, CountryRecord> COUNTRYLANGUAGE_IBFK_1 = ForeignKeys0.COUNTRYLANGUAGE_IBFK_1;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<CityRecord, Integer> IDENTITY_CITY = Internal.createIdentity(City.CITY, City.CITY.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<CityRecord> KEY_CITY_PRIMARY = Internal.createUniqueKey(City.CITY, "KEY_city_PRIMARY", City.CITY.ID);
        public static final UniqueKey<CountryRecord> KEY_COUNTRY_PRIMARY = Internal.createUniqueKey(Country.COUNTRY, "KEY_country_PRIMARY", Country.COUNTRY.CODE);
        public static final UniqueKey<CountrylanguageRecord> KEY_COUNTRYLANGUAGE_PRIMARY = Internal.createUniqueKey(Countrylanguage.COUNTRYLANGUAGE, "KEY_countrylanguage_PRIMARY", Countrylanguage.COUNTRYLANGUAGE.COUNTRYCODE, Countrylanguage.COUNTRYLANGUAGE.LANGUAGE);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<CityRecord, CountryRecord> CITY_IBFK_1 = Internal.createForeignKey(com.aytdm.springbootjooq.domain.db.world.Keys.KEY_COUNTRY_PRIMARY, City.CITY, "city_ibfk_1", City.CITY.COUNTRYCODE);
        public static final ForeignKey<CountrylanguageRecord, CountryRecord> COUNTRYLANGUAGE_IBFK_1 = Internal.createForeignKey(com.aytdm.springbootjooq.domain.db.world.Keys.KEY_COUNTRY_PRIMARY, Countrylanguage.COUNTRYLANGUAGE, "countryLanguage_ibfk_1", Countrylanguage.COUNTRYLANGUAGE.COUNTRYCODE);
    }
}
